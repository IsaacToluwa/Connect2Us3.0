@model book2us.Models.User

@{
    ViewBag.Title = "Edit Profile";
}

<div class="justify-content-center row">
    <div class="col-md-10">
        <div class="shadow-lg card">
            <div class="p-5 card-body">
                <div class="mb-4 text-center">
                    <i class="text-info bi bi-person-gear fs-1"></i>
                    <h2 class="mt-3">Edit Profile</h2>
                    <p class="text-muted">Update your comprehensive account information</p>
                </div>

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <!-- Basic Information -->
                    <h4 class="mb-3 text-primary">Basic Information</h4>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "form-label" })
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-person"></i></span>
                                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", placeholder = "Your username" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label" })
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-envelope"></i></span>
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Your email" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "form-label" })
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-person-lines-fill"></i></span>
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "First name" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "form-label" })
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-person-lines-fill"></i></span>
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Last name" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "form-label" })
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-gender-ambiguous"></i></span>
                                    @Html.DropDownListFor(model => model.Gender, 
                                        new SelectList(new[] { "Male", "Female", "Other", "Prefer not to say" }), 
                                        "Select Gender", 
                                        new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "form-label" })
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-calendar-date"></i></span>
                                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control", placeholder = "Age" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "form-label" })
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-telephone"></i></span>
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", placeholder = "Phone number" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>

                    <!-- Profile Picture -->
                    <div class="mb-4">
                        @Html.LabelFor(model => model.ProfilePicture, htmlAttributes: new { @class = "form-label" })
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-image"></i></span>
                            <input type="file" class="form-control" id="profilePictureFile" accept="image/*" />
                        </div>
                        @Html.HiddenFor(model => model.ProfilePicture)
                        @Html.ValidationMessageFor(model => model.ProfilePicture, "", new { @class = "text-danger" })
                    </div>

                    <!-- Address Information -->
                    <h4 class="mb-3 text-primary">Address Information</h4>
                    <div class="mb-3">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "form-label" })
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-house"></i></span>
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", placeholder = "Street address" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "form-label" })
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", placeholder = "City" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "form-label" })
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-map"></i></span>
                                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", placeholder = "State/Province" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "form-label" })
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-mailbox"></i></span>
                                    @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Postal code" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "form-label" })
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-globe"></i></span>
                                    @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control", placeholder = "Country" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Account Type</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-person-badge"></i></span>
                            <input type="text" class="form-control" value="@Model.Role" readonly />
                        </div>
                    </div>

                    <!-- Password Confirmation -->
                    <h4 class="mb-3 text-primary">Password Confirmation</h4>
                    <div class="mb-4">
                        <label class="form-label">Current Password</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-lock"></i></span>
                            <input type="password" class="form-control" id="currentPassword" name="currentPassword" placeholder="Enter your current password to save changes" required />
                        </div>
                        <small class="text-muted">You must enter your current password to save any profile changes.</small>
                    </div>

                    <div class="gap-2 d-grid">
                        <button type="submit" class="btn btn-info btn-lg">
                            <i class="bi bi-save"></i> Save All Changes
                        </button>
                    </div>
                }

                <hr class="my-4">

                <div class="row">
                    <div class="col-md-6">
                        @Html.ActionLink("Back to Dashboard", "Dashboard", "Account", null, new { @class = "btn btn-outline-secondary w-100" })
                    </div>
                    <div class="col-md-6">
                        @Html.ActionLink("Change Password", "ChangePassword", "Account", null, new { @class = "btn btn-outline-warning w-100" })
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Profile picture preview
            $('#profilePictureFile').on('change', function(e) {
                var file = e.target.files[0];
                if (file) {
                    var reader = new FileReader();
                    reader.onload = function(e) {
                        $('#ProfilePicture').val(e.target.result); // Store base64 in hidden field
                    };
                    reader.readAsDataURL(file);
                }
            });
        });
    </script>
}