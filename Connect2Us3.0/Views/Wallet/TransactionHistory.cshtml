@model List<book2us.Models.Transaction>

@{
    ViewBag.Title = "Transaction History";
}

<h2>Transaction History</h2>

<div class="transaction-history-container">
    <div class="history-header">
        <h4>Your Recent Transactions</h4>
        <div class="balance-summary">
            <span class="balance-label">Current Balance:</span>
            <span class="balance-amount">$@ViewBag.CurrentBalance</span>
        </div>
    </div>

    @if (Model != null && Model.Count > 0)
    {
        <div class="transaction-list">
            @foreach (var transaction in Model)
            {
                <div class="transaction-item @(transaction.Type == book2us.Models.TransactionType.Deposit ? "deposit" : "withdrawal")">
                    <div class="transaction-icon">
                        @if (transaction.Type == book2us.Models.TransactionType.Deposit)
                        {
                            <i class="fas fa-arrow-down text-success"></i>
                        }
                        else
                        {
                            <i class="fas fa-arrow-up text-danger"></i>
                        }
                    </div>
                    
                    <div class="transaction-details">
                        <div class="transaction-header">
                            <span class="transaction-type">@transaction.Type</span>
                            <span class="transaction-amount @(transaction.Type == book2us.Models.TransactionType.Deposit ? "text-success" : "text-danger")">
                                @(transaction.Type == book2us.Models.TransactionType.Deposit ? "+" : "-")$@transaction.Amount.ToString("F2")
                            </span>
                        </div>
                        
                        <div class="transaction-info">
                            <span class="transaction-date">@transaction.CreatedDate.ToString("MMM dd, yyyy HH:mm")</span>
                            <span class="transaction-reference">Ref: @transaction.TransactionReference</span>
                        </div>
                        
                        @if (!string.IsNullOrEmpty(transaction.Description))
                        {
                            <div class="transaction-description">
                                @transaction.Description
                            </div>
                        }
                        
                        <div class="transaction-meta">
                            <span class="payment-method">
                                <i class="fas fa-credit-card"></i> @transaction.PaymentMethod
                            </span>
                            @if (transaction.Fee > 0)
                            {
                                <span class="transaction-fee">
                                    Fee: $@transaction.Fee.ToString("F2")
                                </span>
                            }
                            <span class="transaction-status @GetStatusClass(transaction.Status)">
                                @transaction.Status
                            </span>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="no-transactions">
            <i class="fas fa-wallet fa-3x text-muted"></i>
            <h4>No transactions found</h4>
            <p>You haven't made any transactions yet.</p>
            <a href="@Url.Action("Index", "Wallet")" class="btn btn-primary">
                <i class="fas fa-arrow-left"></i> Back to Wallet
            </a>
        </div>
    }

    <div class="history-actions">
        <a href="@Url.Action("Index", "Wallet")" class="btn btn-outline-primary">
            <i class="fas fa-arrow-left"></i> Back to Wallet
        </a>
        @if (Model != null && Model.Count > 0)
        {
            <button type="button" class="btn btn-outline-secondary" onclick="window.print()">
                <i class="fas fa-print"></i> Print Statement
            </button>
        }
    </div>
</div>

@functions {
    private string GetStatusClass(book2us.Models.TransactionStatus status)
    {
        switch (status)
        {
            case book2us.Models.TransactionStatus.Completed:
                return "status-completed";
            case book2us.Models.TransactionStatus.Pending:
                return "status-pending";
            case book2us.Models.TransactionStatus.Failed:
                return "status-failed";
            default:
                return "";
        }
    }
}

<style>
    .transaction-history-container {
        max-width: 900px;
        margin: 0 auto;
        padding: 20px;
    }

    .history-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
        padding: 20px;
        background-color: #f8f9fa;
        border-radius: 10px;
    }

    .balance-summary {
        text-align: right;
    }

    .balance-label {
        display: block;
        font-size: 0.9em;
        color: #6c757d;
        margin-bottom: 5px;
    }

    .balance-amount {
        display: block;
        font-size: 1.5em;
        font-weight: bold;
        color: #28a745;
    }

    .transaction-list {
        margin-bottom: 30px;
    }

    .transaction-item {
        display: flex;
        align-items: flex-start;
        padding: 20px;
        margin-bottom: 15px;
        background-color: #ffffff;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        border-left: 4px solid #dee2e6;
        transition: all 0.3s ease;
    }

    .transaction-item:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 20px rgba(0,0,0,0.15);
    }

    .transaction-item.deposit {
        border-left-color: #28a745;
    }

    .transaction-item.withdrawal {
        border-left-color: #dc3545;
    }

    .transaction-icon {
        margin-right: 20px;
        font-size: 1.5em;
        padding: 10px;
        background-color: #f8f9fa;
        border-radius: 50%;
        width: 50px;
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .transaction-details {
        flex: 1;
    }

    .transaction-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 8px;
    }

    .transaction-type {
        font-weight: bold;
        font-size: 1.1em;
        text-transform: capitalize;
    }

    .transaction-amount {
        font-size: 1.3em;
        font-weight: bold;
    }

    .transaction-info {
        display: flex;
        gap: 15px;
        margin-bottom: 8px;
        font-size: 0.9em;
        color: #6c757d;
    }

    .transaction-description {
        margin-bottom: 10px;
        font-size: 0.9em;
        color: #495057;
        font-style: italic;
    }

    .transaction-meta {
        display: flex;
        gap: 15px;
        font-size: 0.85em;
        color: #6c757d;
    }

    .payment-method {
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .transaction-fee {
        color: #dc3545;
    }

    .transaction-status {
        padding: 3px 8px;
        border-radius: 12px;
        font-size: 0.8em;
        font-weight: bold;
        text-transform: uppercase;
    }

    .status-completed {
        background-color: #d4edda;
        color: #155724;
    }

    .status-pending {
        background-color: #fff3cd;
        color: #856404;
    }

    .status-failed {
        background-color: #f8d7da;
        color: #721c24;
    }

    .no-transactions {
        text-align: center;
        padding: 60px 20px;
        background-color: #f8f9fa;
        border-radius: 10px;
        margin-bottom: 20px;
    }

    .no-transactions h4 {
        margin: 20px 0 10px 0;
        color: #495057;
    }

    .no-transactions p {
        color: #6c757d;
        margin-bottom: 20px;
    }

    .history-actions {
        display: flex;
        justify-content: center;
        gap: 15px;
    }

    @media (max-width: 768px) {
        .history-header {
            flex-direction: column;
            text-align: center;
            gap: 15px;
        }

        .balance-summary {
            text-align: center;
        }

        .transaction-item {
            flex-direction: column;
            text-align: center;
        }

        .transaction-icon {
            margin-right: 0;
            margin-bottom: 15px;
        }

        .transaction-header {
            flex-direction: column;
            gap: 10px;
        }

        .transaction-info, .transaction-meta {
            flex-direction: column;
            gap: 5px;
        }

        .history-actions {
            flex-direction: column;
        }
    }
</style>

@section Scripts {
    <script src="https://kit.fontawesome.com/your-fontawesome-kit.js"></script>
}