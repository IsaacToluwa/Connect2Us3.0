@model book2us.Models.Order

@{
    ViewBag.Title = "Update Printing Status";
}

<h2>Update Printing Status</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Order #@Model.Id - @Model.FirstName @Model.LastName</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="row">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5>Order Information</h5>
                    </div>
                    <div class="card-body">
                        <dl class="row">
                            <dt class="col-sm-4">Customer:</dt>
                            <dd class="col-sm-8">@Model.FirstName @Model.LastName</dd>
                            
                            <dt class="col-sm-4">Email:</dt>
                            <dd class="col-sm-8">@Model.Email</dd>
                            
                            <dt class="col-sm-4">Phone:</dt>
                            <dd class="col-sm-8">@Model.Phone</dd>
                            
                            <dt class="col-sm-4">Address:</dt>
                            <dd class="col-sm-8">@Model.Address, @Model.City, @Model.State @Model.PostalCode</dd>
                            
                            <dt class="col-sm-4">Order Date:</dt>
                            <dd class="col-sm-8">@Model.OrderDate.ToString("yyyy-MM-dd HH:mm")</dd>
                        </dl>
                    </div>
                </div>
            </div>
            
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5>Printing Service Details</h5>
                    </div>
                    <div class="card-body">
                        <div class="form-group">
                            @Html.LabelFor(model => model.TotalPages, "Total Pages", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.TotalPages, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TotalPages, "", new { @class = "text-danger" })
                        </div>
                        
                        <div class="form-group">
                            @Html.LabelFor(model => model.PrintingStatus, "Printing Status", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.PrintingStatus, 
                                new SelectList(new[] { "Requested", "Processing", "Ready", "Delivered", "PickedUp" }), 
                                new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PrintingStatus, "", new { @class = "text-danger" })
                        </div>
                        
                        <div class="form-group">
                            @Html.LabelFor(model => model.FulfillmentMethod, "Fulfillment Method", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.FulfillmentMethod, 
                                new SelectList(new[] { "Delivery", "Pickup" }), 
                                new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.FulfillmentMethod, "", new { @class = "text-danger" })
                        </div>
                        
                        <div class="form-group">
                            @Html.LabelFor(model => model.AssignedEmployeeId, "Assigned Employee", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.AssignedEmployeeId, 
                                new SelectList(ViewBag.AvailableEmployees, "Id", "UserName", Model.AssignedEmployeeId), 
                                "-- Select Employee --", 
                                new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AssignedEmployeeId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mt-3">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        <h5>Pricing Summary</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <dl class="row">
                                    <dt class="col-sm-6">Base Order Total:</dt>
                                    <dd class="col-sm-6">R@Model.Total</dd>
                                    
                                    <dt class="col-sm-6">Printing Charge (R3/page):</dt>
                                    <dd class="col-sm-6">R@(Model.TotalPages * 3)</dd>
                                    
                                    <dt class="col-sm-6">Delivery Charge:</dt>
                                    <dd class="col-sm-6">R@(Model.FulfillmentMethod == "Delivery" ? "10.00" : "0.00")</dd>
                                </dl>
                            </div>
                            <div class="col-md-6">
                                <dl class="row">
                                    <dt class="col-sm-6"><strong>Total Amount:</strong></dt>
                                    <dd class="col-sm-6"><strong>R@(Model.Total + (Model.TotalPages * 3) + (Model.FulfillmentMethod == "Delivery" ? 10 : 0))</strong></dd>
                                </dl>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group mt-3">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update Status" class="btn btn-primary" />
                @Html.ActionLink("Back to List", "PrintingOrders", null, new { @class = "btn btn-secondary" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    
    <script>
        $(document).ready(function() {
            // Update pricing when pages or fulfillment method changes
            $('#TotalPages, #FulfillmentMethod').change(function() {
                var pages = parseInt($('#TotalPages').val()) || 0;
                var fulfillment = $('#FulfillmentMethod').val();
                var printingCharge = pages * 3;
                var deliveryCharge = fulfillment === 'Delivery' ? 10 : 0;
                var baseTotal = parseFloat('@Model.Total');
                var total = baseTotal + printingCharge + deliveryCharge;
                
                // Update display (you can add dynamic pricing display here)
            });
        });
    </script>
}