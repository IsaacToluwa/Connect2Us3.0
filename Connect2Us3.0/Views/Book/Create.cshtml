@model book2us.Models.Book

@{
    ViewBag.Title = "Create Book Listing";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h2 class="mb-0">
                        <i class="bi bi-book"></i> Create Book Listing
                    </h2>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter book title" } })
                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter author name" } })
                                    @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "form-label" })
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = "4", placeholder = "Describe the book condition, edition, etc." })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>

                        <div class="row">
                            <div class="col-md-4">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter ISBN" } })
                                    @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", placeholder = "0.00", type = "number", step = "0.01" } })
                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.Condition, htmlAttributes: new { @class = "form-label" })
                                    @Html.DropDownListFor(model => model.Condition, new SelectList(new[] { "New", "Like New", "Good", "Fair", "Poor" }), "Select Condition", new { @class = "form-select" })
                                    @Html.ValidationMessageFor(model => model.Condition, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "form-label" })
                                    @Html.DropDownListFor(model => model.Category, new SelectList(new[] { "Fiction", "Non-Fiction", "Textbook", "Children", "Science", "History", "Biography", "Other" }), "Select Category", new { @class = "form-select" })
                                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.SellerId, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.SellerId, new { htmlAttributes = new { @class = "form-control", placeholder = "Your Seller ID" } })
                                    @Html.ValidationMessageFor(model => model.SellerId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="d-flex justify-content-between">
                            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-plus-circle"></i> Create Listing
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}