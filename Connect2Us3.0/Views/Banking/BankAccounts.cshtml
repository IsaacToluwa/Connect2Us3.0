@model List<book2us.Models.BankAccount>

@{
    ViewBag.Title = "Bank Accounts";
}

<h2>Bank Accounts</h2>

<div class="banking-container">
    <div class="banking-header">
        <h4>Your Saved Bank Accounts</h4>
        <a href="@Url.Action("AddBankAccount", "Banking")" class="btn btn-primary">
            <i class="fas fa-plus"></i> Add New Bank Account
        </a>
    </div>

    @if (ViewBag.SuccessMessage != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle"></i> @ViewBag.SuccessMessage
            <button type="button" class="close" data-dismiss="alert">
                <span>&times;</span>
            </button>
        </div>
    }

    @if (ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle"></i> @ViewBag.ErrorMessage
            <button type="button" class="close" data-dismiss="alert">
                <span>&times;</span>
            </button>
        </div>
    }

    @if (Model != null && Model.Count > 0)
    {
        <div class="bank-accounts-grid">
            @foreach (var account in Model)
            {
                <div class="bank-account-card @(account.IsActive ? "" : "inactive")">
                    <div class="account-header">
                        <div class="bank-info">
                            <div class="bank-icon">
                                <i class="fas fa-university"></i>
                            </div>
                            <div class="bank-details">
                                <h5 class="bank-name">@account.BankName</h5>
                                <p class="account-type">@account.AccountType Account</p>
                            </div>
                        </div>
                        <div class="account-status">
                            @if (account.IsActive)
                            {
                                <span class="badge badge-success">Active</span>
                            }
                            else
                            {
                                <span class="badge badge-secondary">Inactive</span>
                            }
                        </div>
                    </div>

                    <div class="account-body">
                        <div class="account-info">
                            <div class="info-row">
                                <span class="info-label">Account Holder:</span>
                                <span class="info-value">@account.AccountHolderName</span>
                            </div>
                            <div class="info-row">
                                <span class="info-label">Account Number:</span>
                                <span class="info-value">****@account.AccountNumber.Substring(account.AccountNumber.Length - 4)</span>
                            </div>
                            <div class="info-row">
                                <span class="info-label">Routing Number:</span>
                                <span class="info-value">****@account.RoutingNumber.Substring(account.RoutingNumber.Length - 4)</span>
                            </div>
                        </div>

                        <div class="account-meta">
                            <div class="meta-item">
                                <i class="fas fa-calendar-plus"></i>
                                <span>Added: @account.CreatedDate.ToString("MMM dd, yyyy")</span>
                            </div>
                            @if (account.LastUsedDate.HasValue)
                            {
                                <div class="meta-item">
                                    <i class="fas fa-calendar-check"></i>
                                    <span>Last Used: @account.LastUsedDate.Value.ToString("MMM dd, yyyy")</span>
                                </div>
                            }
                        </div>
                    </div>

                    <div class="account-actions">
                        <div class="action-buttons">
                            <button type="button" class="btn btn-sm btn-outline-primary" onclick="editAccount(@account.BankAccountId)">
                                <i class="fas fa-edit"></i> Edit
                            </button>
                            <button type="button" class="btn btn-sm btn-outline-danger" onclick="confirmDelete(@account.BankAccountId)">
                                <i class="fas fa-trash"></i> Delete
                            </button>
                        </div>
                        <div class="default-actions">
                            @if (!account.IsActive)
                            {
                                <button type="button" class="btn btn-sm btn-success" onclick="activateAccount(@account.BankAccountId)">
                                    <i class="fas fa-check"></i> Activate
                                </button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-sm btn-warning" onclick="deactivateAccount(@account.BankAccountId)">
                                    <i class="fas fa-pause"></i> Deactivate
                                </button>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="no-accounts">
            <i class="fas fa-university fa-3x text-muted"></i>
            <h4>No bank accounts found</h4>
            <p>You haven't added any bank accounts yet.</p>
            <a href="@Url.Action("AddBankAccount", "Banking")" class="btn btn-primary">
                <i class="fas fa-plus"></i> Add Your First Bank Account
            </a>
        </div>
    }

    <div class="banking-actions">
        <a href="@Url.Action("Index", "Wallet")" class="btn btn-outline-primary">
            <i class="fas fa-arrow-left"></i> Back to Wallet
        </a>
        <a href="@Url.Action("Cards", "Banking")" class="btn btn-outline-secondary">
            <i class="fas fa-credit-card"></i> Manage Cards
        </a>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete Bank Account</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this bank account?</p>
                <p class="text-warning">
                    <i class="fas fa-exclamation-triangle"></i> This action cannot be undone.
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div>

<style>
    .banking-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
    }

    .banking-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
        padding: 20px;
        background-color: #f8f9fa;
        border-radius: 10px;
    }

    .bank-accounts-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .bank-account-card {
        background-color: #ffffff;
        border-radius: 15px;
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        overflow: hidden;
        transition: all 0.3s ease;
        border: 2px solid #e9ecef;
    }

    .bank-account-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0,0,0,0.15);
    }

    .bank-account-card.inactive {
        opacity: 0.7;
        border-color: #dee2e6;
    }

    .account-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 20px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
    }

    .bank-info {
        display: flex;
        align-items: center;
        gap: 15px;
    }

    .bank-icon {
        font-size: 2em;
        background-color: rgba(255,255,255,0.2);
        padding: 10px;
        border-radius: 50%;
        width: 50px;
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .bank-name {
        margin: 0;
        font-size: 1.2em;
        font-weight: bold;
    }

    .account-type {
        margin: 0;
        font-size: 0.9em;
        opacity: 0.9;
    }

    .account-body {
        padding: 20px;
    }

    .account-info {
        margin-bottom: 15px;
    }

    .info-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 8px 0;
        border-bottom: 1px solid #f8f9fa;
    }

    .info-label {
        font-weight: 500;
        color: #6c757d;
        font-size: 0.9em;
    }

    .info-value {
        font-weight: 500;
        color: #495057;
        font-family: 'Courier New', monospace;
    }

    .account-meta {
        display: flex;
        flex-direction: column;
        gap: 8px;
        margin-bottom: 15px;
        font-size: 0.85em;
        color: #6c757d;
    }

    .meta-item {
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .account-actions {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px 20px;
        background-color: #f8f9fa;
        border-top: 1px solid #e9ecef;
    }

    .action-buttons {
        display: flex;
        gap: 10px;
    }

    .default-actions {
        display: flex;
        gap: 10px;
    }

    .no-accounts {
        text-align: center;
        padding: 60px 20px;
        background-color: #f8f9fa;
        border-radius: 10px;
        margin-bottom: 20px;
    }

    .no-accounts h4 {
        margin: 20px 0 10px 0;
        color: #495057;
    }

    .no-accounts p {
        color: #6c757d;
        margin-bottom: 20px;
    }

    .banking-actions {
        display: flex;
        justify-content: center;
        gap: 15px;
    }

    @media (max-width: 768px) {
        .banking-header {
            flex-direction: column;
            gap: 15px;
            text-align: center;
        }

        .bank-accounts-grid {
            grid-template-columns: 1fr;
        }

        .account-actions {
            flex-direction: column;
            gap: 15px;
        }

        .action-buttons, .default-actions {
            justify-content: center;
            width: 100%;
        }

        .banking-actions {
            flex-direction: column;
        }
    }
</style>

@section Scripts {
    <script>
        let currentAccountId = null;

        function editAccount(accountId) {
            // Redirect to edit page or show edit modal
            window.location.href = '@Url.Action("EditBankAccount", "Banking")?id=' + accountId;
        }

        function confirmDelete(accountId) {
            currentAccountId = accountId;
            $('#deleteConfirmModal').modal('show');
        }

        function activateAccount(accountId) {
            $.post('@Url.Action("ActivateBankAccount", "Banking")', { id: accountId })
                .done(function(result) {
                    if (result.success) {
                        location.reload();
                    } else {
                        alert('Error activating account: ' + result.message);
                    }
                })
                .fail(function() {
                    alert('Error activating account.');
                });
        }

        function deactivateAccount(accountId) {
            $.post('@Url.Action("DeactivateBankAccount", "Banking")', { id: accountId })
                .done(function(result) {
                    if (result.success) {
                        location.reload();
                    } else {
                        alert('Error deactivating account: ' + result.message);
                    }
                })
                .fail(function() {
                    alert('Error deactivating account.');
                });
        }

        $(document).ready(function() {
            $('#confirmDeleteBtn').click(function() {
                if (currentAccountId) {
                    $.post('@Url.Action("DeleteBankAccount", "Banking")', { id: currentAccountId })
                        .done(function(result) {
                            if (result.success) {
                                location.reload();
                            } else {
                                alert('Error deleting account: ' + result.message);
                            }
                        })
                        .fail(function() {
                            alert('Error deleting account.');
                        });
                }
                $('#deleteConfirmModal').modal('hide');
            });
        });
    </script>
}