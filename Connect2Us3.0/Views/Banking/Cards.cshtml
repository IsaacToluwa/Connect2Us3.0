@model book2us.Models.BankingViewModel

@{
    ViewBag.Title = "Cards";
}

<h2>Credit/Debit Cards</h2>

<div class="banking-container">
    <div class="banking-header">
        <h4>Your Saved Cards</h4>
        <a href="@Url.Action("AddCard", "Banking")" class="btn btn-primary">
            <i class="fas fa-plus"></i> Add New Card
        </a>
    </div>

    @if (ViewBag.SuccessMessage != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle"></i> @ViewBag.SuccessMessage
            <button type="button" class="close" data-dismiss="alert">
                <span>&times;</span>
            </button>
        </div>
    }

    @if (ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle"></i> @ViewBag.ErrorMessage
            <button type="button" class="close" data-dismiss="alert">
                <span>&times;</span>
            </button>
        </div>
    }

    @if (Model != null && Model.CardDetails != null && Model.CardDetails.Count > 0)
    {
        <div class="cards-grid">
            @foreach (var card in Model.CardDetails)
            {
                <div class="card-item @(card.IsActive ? "" : "inactive")">
                    <div class="card-header">
                        <div class="card-type">
                            <i class="fas fa-credit-card"></i>
                            <span>@card.CardType</span>
                        </div>
                        <div class="card-status">
                            @if (card.IsActive)
                            {
                                <span class="badge badge-success">Active</span>
                            }
                            else
                            {
                                <span class="badge badge-secondary">Inactive</span>
                            }
                            @if (card.IsDefault)
                            {
                                <span class="badge badge-primary">Default</span>
                            }
                        </div>
                    </div>

                    <div class="card-body">
                        <div class="card-number">
                            <span>**** **** **** @card.LastFourDigits</span>
                        </div>
                        <div class="card-info">
                            <div class="info-row">
                                <span class="info-label">Cardholder:</span>
                                <span class="info-value">@card.CardHolderName</span>
                            </div>
                            <div class="info-row">
                                <span class="info-label">Expiry:</span>
                                <span class="info-value">@card.ExpiryMonth/@card.ExpiryYear</span>
                            </div>
                        </div>
                        <div class="card-meta">
                            <div class="meta-item">
                                <i class="fas fa-calendar-plus"></i>
                                <span>Added: @card.CreatedDate.ToString("MMM dd, yyyy")</span>
                            </div>
                            @if (card.LastUsedDate.HasValue)
                            {
                                <div class="meta-item">
                                    <i class="fas fa-calendar-check"></i>
                                    <span>Last Used: @card.LastUsedDate.Value.ToString("MMM dd, yyyy")</span>
                                </div>
                            }
                        </div>
                    </div>

                    <div class="card-actions">
                        <div class="action-buttons">
                            <button type="button" class="btn-outline-primary btn btn-sm" onclick="editCard(@card.CardId)">
                                <i class="fas fa-edit"></i> Edit
                            </button>
                            <button type="button" class="btn-outline-danger btn btn-sm" onclick="confirmDeleteCard(@card.CardId)">
                                <i class="fas fa-trash"></i> Delete
                            </button>
                        </div>
                        @if (!card.IsDefault && card.IsActive)
                        {
                            <div class="default-action">
                                <form action="@Url.Action("SetDefaultCard", "Banking")" method="post" style="display: inline;">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="id" value="@card.CardId" />
                                    <button type="submit" class="btn btn-sm btn-success">
                                        <i class="fas fa-star"></i> Set as Default
                                    </button>
                                </form>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="no-cards">
            <i class="text-muted fas fa-credit-card fa-3x"></i>
            <h4>No cards found</h4>
            <p>You haven't added any cards yet.</p>
            <a href="@Url.Action("AddCard", "Banking")" class="btn btn-primary">
                <i class="fas fa-plus"></i> Add Your First Card
            </a>
        </div>
    }

    <div class="banking-actions">
        <a href="@Url.Action("Index", "Wallet")" class="btn-outline-primary btn">
            <i class="fa-arrow-left fas"></i> Back to Wallet
        </a>
        <a href="@Url.Action("BankAccounts", "Banking")" class="btn-outline-secondary btn">
            <i class="fas fa-university"></i> Manage Bank Accounts
        </a>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteCardConfirmModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete Card</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this card?</p>
                <p class="text-warning">
                    <i class="fas fa-exclamation-triangle"></i> This action cannot be undone.
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteCardBtn">Delete</button>
            </div>
        </div>
    </div>
</div>

<style>
    .banking-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
    }

    .banking-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
        padding: 20px;
        background-color: #f8f9fa;
        border-radius: 10px;
    }

    .cards-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .card-item {
        background-color: #ffffff;
        border-radius: 15px;
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        overflow: hidden;
        transition: all 0.3s ease;
        border: 2px solid #e9ecef;
    }

    .card-item:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0,0,0,0.15);
    }

    .card-item.inactive {
        opacity: 0.6;
        background-color: #f8f9fa;
    }

    .card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 20px;
        background-color: #007bff;
        color: white;
    }

    .card-type {
        display: flex;
        align-items: center;
        gap: 10px;
        font-weight: bold;
    }

    .card-status {
        display: flex;
        gap: 5px;
    }

    .card-body {
        padding: 20px;
    }

    .card-number {
        font-size: 1.2em;
        font-weight: bold;
        margin-bottom: 15px;
        letter-spacing: 2px;
    }

    .card-info {
        margin-bottom: 15px;
    }

    .info-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 8px;
    }

    .info-label {
        font-weight: bold;
        color: #6c757d;
    }

    .card-meta {
        border-top: 1px solid #e9ecef;
        padding-top: 15px;
    }

    .meta-item {
        display: flex;
        align-items: center;
        gap: 8px;
        margin-bottom: 5px;
        font-size: 0.9em;
        color: #6c757d;
    }

    .card-actions {
        padding: 20px;
        border-top: 1px solid #e9ecef;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .action-buttons {
        display: flex;
        gap: 10px;
    }

    .no-cards {
        text-align: center;
        padding: 60px 20px;
        background-color: #f8f9fa;
        border-radius: 10px;
        margin-bottom: 30px;
    }

    .no-cards h4 {
        margin: 20px 0 10px 0;
        color: #6c757d;
    }

    .no-cards p {
        color: #6c757d;
        margin-bottom: 20px;
    }

    .banking-actions {
        display: flex;
        justify-content: space-between;
        margin-top: 30px;
    }

    @@media (max-width: 768px) {
        .banking-header {
            flex-direction: column;
            gap: 15px;
            text-align: center;
        }

        .cards-grid {
            grid-template-columns: 1fr;
        }

        .card-actions {
            flex-direction: column;
            gap: 15px;
        }

        .banking-actions {
            flex-direction: column;
            gap: 15px;
        }
    }
</style>

<script>
    function editCard(cardId) {
        // Implement edit functionality
        alert('Edit functionality for card ' + cardId + ' will be implemented');
    }

    function confirmDeleteCard(cardId) {
        $('#deleteCardConfirmModal').modal('show');
        $('#confirmDeleteCardBtn').data('card-id', cardId);
    }

    $('#confirmDeleteCardBtn').click(function() {
        var cardId = $(this).data('card-id');
        // Implement delete functionality
        alert('Delete functionality for card ' + cardId + ' will be implemented');
        $('#deleteCardConfirmModal').modal('hide');
    });
</script>